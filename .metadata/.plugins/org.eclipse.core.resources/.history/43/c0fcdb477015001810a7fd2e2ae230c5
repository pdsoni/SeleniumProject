package Examples;

import java.awt.FlowLayout;
import java.awt.image.BufferedImage;
import java.io.BufferedOutputStream;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.URL;
import java.net.URLConnection;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.imageio.ImageIO;
import javax.lang.model.element.Element;
import javax.lang.model.util.Elements;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.text.Document;

import com.google.gson.JsonObject;

public class Testing {
	private static final String webSiteURL = "http://www.supercars.net/gallery/119513/2841/5.html";
	private static final String folderPath = "C://";

	// This will find something on google images based on the search parameters and grab the first image
		public static void main(String[] args) {
			 try {
				Document doc = Jsoup.connect(webSiteURL).get();
				Elements img = doc.getElementsByTag("img");
				for (Element el : img) {
				String src = el.absUrl("src");
				System.out.println("Image Found!");
				System.out.println("src attribute is : "+src);
				getImages(src);
				}
				 } catch (IOException ex) {
				 System.err.println("There was an error");
				Logger.getLogger(DownloadImages.class.getName()).log(Level.SEVERE, null, ex);
				}
				 }
				private static void getImages(String src) throws IOException {
				String folder = null;
				 int indexname = src.lastIndexOf("/");
				 if (indexname == src.length()) {
				 src = src.substring(1, indexname);
				 }
				 indexname = src.lastIndexOf("/");
				 String name = src.substring(indexname, src.length());
				 System.out.println(name);
				URL url = new URL(src);
				InputStream in = url.openStream();
				OutputStream out = new BufferedOutputStream(new FileOutputStream( folderPath+ name));
				 for (int b; (b = in.read()) != -1;) {
				 out.write(b);
				 }
				 out.close();
				 in.close();
				 }

	

}
