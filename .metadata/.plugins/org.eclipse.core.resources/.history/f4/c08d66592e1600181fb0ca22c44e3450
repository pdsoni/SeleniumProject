package searches;

import java.io.File;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;

import implementation.search.Search;

public class BingSearch implements Search{
	
	public WebDriver driver;
	
	@FindBy(css="input[name='q']")
	WebElement bingSearchBox;
	
	@FindBy(css="input[name='go']")
	WebElement bingSearchIcon;
	
	@FindBy(css="h2:first-child a[href^='http']")
	List<WebElement> results;
	
	@FindBy(css="div.dc_mn")
	WebElement phraseDef;
	
	@FindBy(css="div.dc_prn>div>span:nth-child(1)")
	WebElement phrasePronunciation;
	
	@FindBy(css="a[h='ID=SERP,5017.1']")
	WebElement imageLink;
	
	@FindBy(css="div.imgpt>a>div>img")
	List<WebElement> imageResults;
	
	@FindBy(css=".rg_ic.rg_i")
	List<WebElement> imageLocation;
	
	/**
	 * This method is for Bing basic search
	 * @param: Search String
	 * @return: Returning list of map which containing following:
	 * {{"title", "Result Title"}, {"pageLink", "Result Page URL"}}
	 */

	public List<HashMap<String, String>> searchFor(String keyword) {
		List<HashMap<String, String>> searchResults = new ArrayList<HashMap<String, String>>();
		bingSearchBox.sendKeys(keyword);
		bingSearchIcon.click();
		for (WebElement result: results){
			HashMap<String, String> attributes = new HashMap<String, String>();
			attributes.put("linkTitle",result.getText());
			attributes.put("pageLink",result.getAttribute("href"));
			searchResults.add(attributes);
		}
		return searchResults;
	}

	/**
	 * This method is for perform a definition search query for dictionary meaning of phrase
	 * @param: Search String
	 * @return: Returning map which containing following:
	 * {"definition": [term/phrase definition], "pronunciation": [Pronunciation of the word]}
	 */
	
	public HashMap<String, String> definePhrase(String phrase) {
		HashMap<String, String> searchPhrase = new HashMap<String, String>();
		bingSearchBox.sendKeys(phrase);
		bingSearchIcon.click();
		searchPhrase.put("phraseDefinition", phraseDef.getText());
		searchPhrase.put("phrasePronunciation", phrasePronunciation.getAttribute(""));
		return searchPhrase;
	}

	/**
	 * This method is for perform an image search for keyword
	 * @param: Search String
	 * @return: Returning list of image files
	 *
	 */
	
	public List<File> searchImagesFor(String SearchTerm) {
		List<File> fileList = new ArrayList<File>();
		bingSearchBox.sendKeys(SearchTerm);
		bingSearchIcon.click();
		imageLink.click();
		int i = 1;
		for (WebElement img: imageResults)
		{
			System.out.println("Image link =" + img.getAttribute("href"));
			File file = new File(img.getAttribute("src"));
			fileList.add(file);
				if (i == 10) 
			break;
			i++; 
		}
		File directory = new File("C:/Users/pradeep_kumar/workspace/Learning/bin");
        //get all the files from a directory
        File[] fList = directory.listFiles();
        for (File file : fList){
            System.out.println(file.getName());
        }
		return null;
	}

}
